using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

namespace Controle.Models
{
    public class Ticket
    {
        private readonly static string _cn = @"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog = jsplan; Integrated Security = True; Connect Timeout = 30; Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False";

        public int Id { get; set; }
        public string Titulo { get; set; }
        public string Tick { get; set; }
        public string Data { get; set; }
        public string Cliente { get; set; }
        public string Status { get; set; }
        public string Comentario { get; set; }

        public Ticket()
        {
        }

        public Ticket(int id, string titulo, string tick, string data, string cliente,
            string status, string comentario)
        {
            Id = id;
            Titulo = titulo;
            Tick = tick;
            Data = data;
            Cliente = cliente;
            Status = status;
            Comentario = comentario;
        }

        public static List<Ticket> GetTicket()
        {
            var listaTickets = new List<Ticket>();
            var sql = "SELECT * FROM tb_planilha";

            try
            {

                using (SqlConnection cn = new SqlConnection(_cn))
                {
                    cn.Open();
                    using (SqlCommand cmd = new SqlCommand(sql, cn))
                    {
                        using (SqlDataReader dr = cmd.ExecuteReader())
                        {
                            if (dr.HasRows)
                            {
                                while (dr.Read())
                                {
                                    listaTickets.Add(new Ticket(
                                        Convert.ToInt32(dr["Id"]),
                                        dr["Titulo"].ToString(),
                                        dr["Tick"].ToString(),
                                        Convert.ToString(dr["Data"]),
                                        dr["Cliente"].ToString(),
                                        dr["Status"].ToString(),
                                        dr["Comentario"].ToString()));
                                }


                            }

                        }
                    }
                }
            }
            catch (Exception ex)
            {

                Console.WriteLine("Falha: " + ex.Message); ;
            }
            return listaTickets;
        }

        public void Salvar()
        {
            var sql = "INSERT INTO tb_planilha (TITULO, TICKET, DATA, CLIENTE, STATUS, COMENTARIO)" +
                "VALUES (@TITULO, @TICKET, @DATA, @CLIENTE, @STATUS, @COMENTARIO) ";
            try
            {
                using (var cn = new SqlConnection(_cn))
                {
                    cn.Open();
                    using(var cmd = new SqlCommand(sql, cn))
                    {
                        cmd.Parameters.AddWithValue("@TITULO", Titulo);
                        cmd.Parameters.AddWithValue("@TICKET", Tick);
                        cmd.Parameters.AddWithValue("@DATA", Data);
                        cmd.Parameters.AddWithValue("@CLIENTE", Cliente);
                        cmd.Parameters.AddWithValue("@STATUS", Status);
                        cmd.Parameters.AddWithValue("@COMENTARIO", Comentario);

                        cmd.ExecuteNonQuery();

                    }
                }

            }
            catch (Exception ex)
            {

                Console.WriteLine("Falha: " + ex); ;
            }



        }
    }
}